TODO. 批量数据读写以及操作的模板化流程:
  数据的IO + 数据转换(Conversion) + 存储(Storage)
JobLauncher 负责执行特定名称的Job
Job (name):
  JobRepository (dataSource) scheduling and interacting with the job
  => JobExecutionListener (beforeJob, afterJob) 监听器/拦截器设计
  Step1 (name): 定义任务要执行步骤
  => StepExecutionListener (beforeStep, afterStep) 监听器
      -> reader()
         -> ItemReader
         -> FieldSetMapper 从原始文件中数据映射到读取对象
         -> FlatFileItemReader
         -> JdbcCursorItemReader
      -> ItemProcessor
         => ItemProcessListener (beforeProcess, afterProcess) 监听器
         -> ItemMapper  从读取对象映射到目标对象
            -> SourceExtractor 从原始对象中解析出适配内容
      -> writer()
         -> ItemWriter
         -> StaxEventItemWriter
         -> JdbcBatchItemWriter

数据格式: .csv .xml .json
https://github.com/eugenp/tutorials/tree/master/spring-batch
https://docs.spring.io/spring-batch/reference/readers-and-writers/json-reading-writing.html

并发执行: Scaling and Parallel Processing
https://docs.spring.io/spring-batch/reference/scalability.html

迁移升级: Spring Batch 5.0 Migration Guide
https://github.com/spring-projects/spring-batch/wiki/Spring-Batch-5.0-Migration-Guide